{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Jun.tsx","p2-homeworks/h5/pages/JunPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","Style","message","avatar","img","src","alt","message_content","message_body","user_name","name","user_message","time_container","time","messageData","HW1","Affair","style","someClass","some","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","onKeyPress","e","charCode","user","GreetingContainer","users","addUserCallback","setName","setError","currentTarget","alert","trim","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Error404","Jun","JunPlus","PATH","Routes2","path","element","Header","to","HW5","Routes","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.529c64bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3HiQP\",\"avatar\":\"Message_avatar__1i8cV\",\"img\":\"Message_img__KT3IB\",\"message_content\":\"Message_message_content__3rXsS\",\"message_body\":\"Message_message_body__1Oo05\",\"user_message\":\"Message_user_message__2qIYH\",\"user_name\":\"Message_user_name__1Oz1c\",\"time_container\":\"Message_time_container__3Izz7\",\"time\":\"Message_time__2e0jm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__267E-\",\"errorInput\":\"SuperInputText_errorInput__364do\",\"error\":\"SuperInputText_error__2XHFp\",\"hw3\":\"SuperInputText_hw3__2raNo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1ksqI\",\"red\":\"SuperButton_red__1wY_A\",\"button\":\"SuperButton_button__Op3tF\",\"blink\":\"SuperButton_blink__1YOoi\",\"redButton\":\"SuperButton_redButton__m3WTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__2v-0K\",\"some\":\"Affairs_some__3XYyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2RvvP\",\"error\":\"Greeting_error__RqLRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1uXSI\",\"column\":\"HW4_column__OnCa9\",\"testSpanError\":\"HW4_testSpanError__3AdFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2lo8A\",\"spanClassName\":\"SuperCheckbox_spanClassName__2pRRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__wU9Ku\"};","import React from 'react'\nimport {messageDataType} from \"./HW1\";\nimport './Message.module.css'\nimport Style from \"./Message.module.css\";\n\n\nconst Message: React.FC<messageDataType> = (props) => {\n    return (\n        <div className={Style.message}>\n            <div className={Style.avatar}><img className={Style.img} src={props.avatar} alt=\"avatar\"/></div>\n            <div className={Style.message_content}>\n                <div className={Style.message_body}>\n                    <div className={Style.user_name}>{props.name}</div>\n                    <div className={Style.user_message}>{props.message}</div>\n                </div>\n                <div className={Style.time_container}>\n                    <div className={Style.time}>{props.time}</div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nexport type messageDataType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\nconst messageData: messageDataType = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            {/*should work (должно работать)*/}\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void// need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n    return (\r\n        <div className={style.someClass}>\r\n            <span className={style.some}>\r\n                {props.affair.name}\r\n            </span>\r\n\r\n            <span>\r\n                <button onClick={deleteCallback}>X</button>\r\n            </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\n// need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(el => el.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(el => el._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void// need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: Array<UserType> // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.someClass // need to fix with (?:)\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addUser();\r\n            name = ''\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input value={name}\r\n                   onChange={setNameCallback}\r\n                   className={inputClass}\r\n                   onKeyPress={onKeyPressHandler}\r\n            />\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            {totalUsers.map(user => <span>{user.name}</span>)}\r\n            {/*<span>{totalUsers}</span>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState, ChangeEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        // {name ? error === '' : setName === ''}\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n        alert(`Hello  !`) // need to fix\r\n        if (!name.trim()) {\r\n            setError('error')\r\n        }\r\n        addUserCallback(name + ',')\r\n        setName('')\r\n    }\r\n\r\n    const totalUsers = users // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string         // need to fix any\r\n    name: string         // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUser = {_id: v1(), name: name}\r\n        setUsers([...users, newUser]) // need to fix [0,1,2,3,4]\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport HW7 from \"../../h7/HW7\";\nimport HW8 from \"../../h8/HW8\";\nimport HW9 from \"../../h9/HW9\";\nimport HW10 from \"../../h10/HW10\";\nimport HW11 from \"../../h11/HW11\";\n\n\nfunction Jun() {\n    return (\n        <div>\n            {/*<HW7/>*/}\n            {/*<HW8/>*/}\n            {/*<HW9/>*/}\n            {/*<HW10/>*/}\n            {/*<HW11/>*/}\n        </div>\n    )\n}\n\nexport default Jun\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW12 from \"../../h12/HW12\";\n\n\nfunction JunPlus() {\n    return (\n        <div>\n            {/*<HW12/>*/}\n        </div>\n    )\n}\n\nexport default JunPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Route, Routes} from 'react-router-dom'\n\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Jun from \"./pages/Jun\";\nimport JunPlus from \"./pages/JunPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUN: '/jun',\n    JUN_PLUS: '/jun-plus'\n}\n\n// add paths\n\nfunction Routes2() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                {/*<Redirect from = {'/ '} to={PATH.PRE_JUNIOR}/>*/}\n\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUN} element={<Jun/>}/>\n                <Route path={PATH.JUN_PLUS} element={<JunPlus/>}/>\n\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route element={<Error404/>}/>\n                <Route path={'*'} element={<PreJunior/>}/>\n            </Routes>\n        </div>\n    )\n}\n\nexport default Routes2\n// add routes","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {PATH} from \"./Routes\";\n\nfunction Header() {\n    return (\n        <div >\n            <div>\n                <NavLink to={PATH.PRE_JUNIOR} >PreJunior</NavLink>\n            </div>\n            <div >\n                <NavLink to={PATH.JUN}>Jun</NavLink>\n            </div>\n            <div >\n                <NavLink to={PATH.JUN_PLUS} >JunPlus</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n\n// add NavLinks -  нужно , чтобы NavLink выезжали","import React from 'react'\nimport { HashRouter} from 'react-router-dom'\nimport Header from './Header'\nimport Routes2 from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n\n\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n\n            <Routes2/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        // <BrowserRouter>\n            <div className={s.App}>\n                <div>react homeworks:</div>\n                {/*<HW1/>*/}\n                {/*<HW2/>*/}\n                {/*<HW3/>*/}\n                {/*<HW4/>*/}\n                <HW5/>\n            </div>\n        // </BrowserRouter>\n\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    // <BrowserRouter>\n        <App/>\n    // </BrowserRouter>\n    ,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}